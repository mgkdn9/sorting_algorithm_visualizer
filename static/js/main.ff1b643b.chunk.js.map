{"version":3,"sources":["components/shared/Header.js","components/shared/RequireAuth.js","components/Graph.js","components/Home.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/AlgoTest.js","components/MyScores.js","App.js","index.js"],"names":["linkStyle","color","textDecoration","authenticatedOptions","Nav","Link","to","style","unauthenticatedOptions","Header","user","Navbar","bg","fixed","variant","expand","Brand","Item","Toggle","Collapse","id","className","email","RequireAuth","children","replace","Graph","props","bars","array","map","element","index","height","Home","marginTop","frontSize","textAlign","fontSize","width","margin","paddingBottom","Stack","Button","onClick","setArray","regenerate","hmtlFor","onChange","changeDelay","type","min","max","value","delay","display","justifyContent","alignItems","overflowX","overflowY","border","arrColors","disabled","busy","bubbleSort","length","quickSort","mergeSort","heapSort","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","useState","setEmail","setPassword","passwordConfirmation","setPasswordConfirmation","navigate","useNavigate","Form","onSubmit","event","preventDefault","setUser","password_confirmation","signUp","then","res","catch","error","Group","controlId","Label","Control","required","name","placeholder","e","target","SignIn","console","log","SignOut","msgAlert","clearUser","ButtonGroup","headers","Authorization","token","signOut","finally","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwords","old","new","changePassword","AlgoTest","currentQuestion","setCurrentQuestion","userScore","setUserScore","userPercent","setUserPercent","useEffect","precent","heapArray","mergeArray","quickArray","bubbleArray","runAgain","container","flexDirection","title","subtitle","question","button","submitQuestion","checked","bHeap","bMerge","bQuick","bBubble","postScore","percent","preJSONBody","userId","_id","requestOptions","body","JSON","stringify","fetch","postedScore","err","column","Check","label","MyScores","reset","setReset","myScores","setMyScores","json","foundObject","deleteScore","resBody","scoreStyle","columnStyle","greenText","redText","arrDiv","score","App","setBusy","generate","arrayHome","setArrayHome","arrayTestQuick","setArrayTestQuick","arrayTestBubble","setArrayTestBubble","arrayTestMerge","setArrayTestMerge","arrayTestHeap","setArrayTestHeap","setDelay","i","push","Math","floor","random","swap","index1","index2","temp","sleepThenSwap","a","sleep","ms","Promise","resolve","setTimeout","n","bTest","partition","divideAndConquer","subArray","left","right","leftIndex","rightIndex","pivot","j","merge","mergeSortRec","arr","maxele","beg","end","mid","k","tempArray","heapify","largest","r","l","path","reload","setArrayBubble","setArrayQuick","setArrayHeap","setArrayMerge","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff1b643b.chunk.js","sourcesContent":["import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Link } from \"react-router-dom\";\n\nconst linkStyle = {\n  color: \"white\",\n  textDecoration: \"none\",\n};\nconst authenticatedOptions = (\n  <>\n    <Nav.Link>\n      <Link to=\"my-scores\" style={linkStyle}>\n        My Scores\n      </Link>\n    </Nav.Link>\n    <Nav.Link>\n      <Link to=\"change-password\" style={linkStyle}>\n        Change Password\n      </Link>\n    </Nav.Link>\n    <Nav.Link>\n      <Link to=\"sign-out\" style={linkStyle}>\n        Log out\n      </Link>\n    </Nav.Link>\n  </>\n);\n\nconst unauthenticatedOptions = (\n  <>\n    <Nav.Link>\n      <Link to=\"sign-up\" style={linkStyle}>\n        Sign Up\n      </Link>\n    </Nav.Link>\n    <Nav.Link>\n      <Link to=\"sign-in\" style={linkStyle}>\n        Log In\n      </Link>\n    </Nav.Link>\n  </>\n);\n\nconst Header = ({ user }) => (\n  <Navbar bg=\"secondary\" fixed=\"top\" variant=\"dark\" expand=\"sm\">\n    <Navbar.Brand>\n      <Nav.Link>\n        <Link to=\"/\" style={linkStyle}>\n          AlgoViews\n        </Link>\n      </Nav.Link>\n    </Navbar.Brand>\n    <Nav.Item>\n      <Nav.Link>\n        <Link to=\"/algo-test\" style={linkStyle}>\n          Test Your Knowledge\n        </Link>\n      </Nav.Link>\n    </Nav.Item>\n\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n      <Nav className=\"ml-auto justify-content-center\">\n        {user && (\n          <span className=\"navbar-text mr-2\">Welcome, {user.email}</span>\n        )}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nexport default Header;\n","import { Navigate } from 'react-router-dom'\n\nexport default function RequireAuth({ user, children }) {\n\n\treturn user !== null ? children : <Navigate to='/sign-in' replace />\n}\n","import React from 'react'\n\nconst Graph = ( props) => {\n\n  const bars = props.array.map((element,index) => {\n    const style = {\n      height: `${element/3}px`\n    }\n    return <div key={index} className=\"bar\" style={style}></div>\n  })\n\n  return (\n    <div className=\"flexContainer\">\n      {bars}\n    </div>\n  )\n}\n\nexport default Graph","import Graph from '../components/Graph'\nimport React from 'react'\n\n// Bootstrap Components\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack'\n\nconst Home = (props) => {\n\n  const container = {\n    marginTop: '100px'\n  }\n  const title = {\n    frontSize: '40px',\n    textAlign: 'center',\n  }\n  const subtitle = {\n    fontSize: '20px',\n    textAlign: 'center',\n    width: '650px',\n    margin: '0 auto',\n    paddingBottom: '20px'\n  }\n  const graph = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '400px',\n    overflowX: 'auto',\n    overflowY: 'auto',\n    border: '5px solid black'\n  }\n  \n\treturn (\n\t\t<>\n\t\t\t<div style={container}>\n\t\t\t\t<h1 style={title}>AlgoViews</h1>\n\t\t\t\t<p style={subtitle}>This App was built to help you study and learn more on sorting algrithms</p>\n        <br></br>\n        <br></br>\n        <Stack > \n          <div  className=\"inputContainer\">\n            <Button className='stackbutton'\n              variant='secondary' \n              onClick={()=>props.setArray(props.regenerate())}>\n              Regenerate Array\n            </Button>\n            <div className=\"slidecontainer\">\n              <label hmtlFor=\"animationSpeed\">Animation Speed:</label>\n              <input onChange={props.changeDelay} type=\"range\" min=\"1\" max=\"100\" value={props.delay} className=\"slider\" id=\"animationSpeed\"/>\n            </div>\n          </div>\n          <div style={graph} className='flexContainer'>\n            <Graph array={props.array} arrColors={props.arrColors}/>\n          </div>\n          <div className=\"flexContainer\">\n            <Button disabled={props.busy} className='stackbutton' variant='secondary' onClick={()=>props.bubbleSort(props.array, props.array.length, false)}>Bubble Sort</Button>\n            <Button disabled={props.busy} className='stackbutton' variant='secondary' onClick={()=>props.quickSort(props.array, false)}>Quick Sort</Button>\n            <Button disabled={props.busy} className='stackbutton' variant='secondary' onClick={()=>props.mergeSort(props.array, false)}>Merge Sort</Button>\n            <Button disabled={props.busy} className='stackbutton' variant='secondary' onClick={()=>props.heapSort(props.array, false)}>Heap Sort</Button>\n          </div>\n        </Stack>\n        \n      </div>\n\t\t\n\t\t</>\n\t)\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n    // YOU MUST CHANGE PRODUCTION URL WHEN DEPLOYING\n\tproduction: 'https://sorting-algorithm-visualizer-1umf.onrender.com',\n\tdevelopment: 'http://localhost:8000',\n}\n\nif (window.location.hostname === 'localhost') {\n\tapiUrl = apiUrls.development\n} else {\n\tapiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n\treturn axios({\n\t\tmethod: 'POST',\n\t\turl: apiUrl + '/sign-up',\n\t\tdata: {\n\t\t\tcredentials: {\n\t\t\t\temail: credentials.email,\n\t\t\t\tpassword: credentials.password,\n\t\t\t\tpassword_confirmation: credentials.passwordConfirmation,\n\t\t\t},\n\t\t},\n\t})\n}\n\nexport const signIn = (credentials) => {\n\treturn axios({\n\t\turl: apiUrl + '/sign-in',\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\tcredentials: {\n\t\t\t\temail: credentials.email,\n\t\t\t\tpassword: credentials.password,\n\t\t\t},\n\t\t},\n\t})\n}\n\nexport const signOut = (user) => {\n\treturn axios({\n\t\turl: apiUrl + '/sign-out',\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAuthorization: `Token token=${user.token}`,\n\t\t},\n\t})\n}\n\nexport const changePassword = (passwords, user) => {\n\treturn axios({\n\t\turl: apiUrl + '/change-password',\n\t\tmethod: 'PATCH',\n\t\theaders: {\n\t\t\tAuthorization: `Token token=${user.token}`,\n\t\t},\n\t\tdata: {\n\t\t\tpasswords: {\n\t\t\t\told: passwords.oldPassword,\n\t\t\t\tnew: passwords.newPassword,\n\t\t\t},\n\t\t},\n\t})\n}\n","// import React, { Component } from 'react'\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = (props) => {\n    \n    const container = {\n        marginTop: '100px'\n    }\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [passwordConfirmation, setPasswordConfirmation] = useState('')\n\n    const navigate = useNavigate()\n\n\tconst onSignUp = (event) => {\n\t\tevent.preventDefault()\n\n\t\tconst {setUser} = props\n\n        const credentials = {email, password, passwordConfirmation}\n\n\t\tsignUp(credentials)\n\t\t\t.then(() => signIn(credentials))\n\t\t\t.then((res) => setUser(res.data.user))\n\t\t\t.then(() => navigate('/'))\n\t\t\t.catch((error) => {\n                setEmail('')\n                setPassword('')\n                setPasswordConfirmation('')\n\t\t\t})\n\t}\n\n\n    return (\n        <div style={container} className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3>Sign Up</h3>\n                <Form onSubmit={onSignUp}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            name='email'\n                            value={email}\n                            placeholder='Enter email'\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            name='password'\n                            value={password}\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='passwordConfirmation'>\n                        <Form.Label>Password Confirmation</Form.Label>\n                        <Form.Control\n                            required\n                            name='passwordConfirmation'\n                            value={passwordConfirmation}\n                            type='password'\n                            placeholder='Confirm Password'\n                            onChange={e => setPasswordConfirmation(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button variant='primary' type='submit'>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n\n}\n\nexport default SignUp","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = (props) => {\n    \n    const container = {\n        marginTop: '100px'\n    }\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const navigate = useNavigate()\n\n\t// handleChange = (event) =>\n\t// \tthis.setState({\n\t// \t\t[event.target.name]: event.target.value,\n\t// \t})\n\n\tconst onSignIn = (event) => {\n\t\tevent.preventDefault()\n        console.log('the props', props)\n\t\tconst { setUser } = props\n\n        const credentials = {email, password}\n\n\t\tsignIn(credentials)\n\t\t\t.then((res) => setUser(res.data.user))\n\t\t\t.then(() => navigate('/'))\n\t\t\t.catch((error) => {\n                setEmail('')\n                setPassword('')\n\t\t\t})\n\t}\n\n    return (\n        <div style={container} className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3>Sign In</h3>\n                <Form onSubmit={onSignIn}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            name='email'\n                            value={email}\n                            placeholder='Enter email'\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            name='password'\n                            value={password}\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button variant='primary' type='submit'>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn\n","import { useNavigate } from 'react-router-dom'\n\nimport {Button, ButtonGroup} from 'react-bootstrap'\n\nimport { signOut } from '../../api/auth'\n\nconst SignOut = (props) => {\n\n    const container = {\n        marginTop: '100px'\n    }\n\n\tconst { msgAlert, clearUser, user } = props\n    console.log(props)\n\n    const navigate = useNavigate()\n\n    const onSignOut = () => {\n\t\tsignOut(user)\n\t\t\t.finally(() => navigate('/'))\n\t\t\t.finally(() => clearUser())\n    }\n\n    const onCancel = () => {\n        navigate('/')\n    }\n\n\treturn (\n\t\t<>\n            <div style={container} className='row'>\n                <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                    <h2>Are you sure you want to sign out?</h2>\n                    <small>We hate to see you go...</small><br/>\n                    <ButtonGroup>\n                        <Button variant='danger' onClick={onSignOut}>\n                            Sign Out\n                        </Button>\n                        <Button variant='warning' onClick={onCancel}>\n                            Cancel\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n\t\t</>\n\t)\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = (props) => {\n    \n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n\n    const navigate = useNavigate()\n\n\tconst onChangePassword = (event) => {\n\t\tevent.preventDefault()\n\n\t\tconst { msgAlert, user } = props\n        console.log('the user', user)\n        \n\n        const passwords = {oldPassword, newPassword}\n\n\t\tchangePassword(passwords, user)\n\t\t\t.then(() => navigate('/'))\n\t\t\t.catch((error) => {\n\t\t\t\tsetOldPassword('')\n                setNewPassword('')\n\t\t\t})\n\t}\n\n\n\n    return (\n        <div className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3>Change Password</h3>\n                <Form onSubmit={onChangePassword}>\n                    <Form.Group controlId='oldPassword'>\n                        <Form.Label>Old password</Form.Label>\n                        <Form.Control\n                            required\n                            name='oldPassword'\n                            value={oldPassword}\n                            type='password'\n                            placeholder='Old Password'\n                            onChange={e => setOldPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='newPassword'>\n                        <Form.Label>New Password</Form.Label>\n                        <Form.Control\n                            required\n                            name='newPassword'\n                            value={newPassword}\n                            type='password'\n                            placeholder='New Password'\n                            onChange={e => setNewPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button variant='primary' type='submit'>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default ChangePassword","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router';\nimport apiUrl from '../apiConfig'\n\n\nimport Graph from '../components/Graph'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\n\nconst AlgoTest = (props) => {\n\n    //----- STATE VARIABLES -----\n    const [currentQuestion, setCurrentQuestion] = useState(1)\n    const [userScore, setUserScore] = useState({})\n    const [userPercent, setUserPercent] = useState(0)\n\n    const navigate = useNavigate()\n\n    useEffect(()=>{\n        setUserPercent(0)\n    }, [])\n\n    useEffect(()=>{\n        setUserScore({...userScore, precent: userPercent})\n    }, [userPercent])\n\n    useEffect(() => {\n        runAgain()\n    },[currentQuestion]);\n\n    const container = {\n        marginTop: '100px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n    const title = {\n        frontSize: '40px',\n        textAlign: 'center',\n        margin: '50px'\n    }\n    const subtitle = {\n        fontSize: '20px',\n        textAlign: 'center',\n        width: '550px',\n        margin: '0 auto',\n        paddingBottom: '20px'\n    }\n    const question = {\n        fontSize: '15px',\n        textAlign: 'center',\n        width: '550px',\n        margin: '0 auto',\n        paddingBottom: '20px'\n    }\n    const button = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n\n    function runAgain(){\n        if(currentQuestion === 1){\n            props.heapSort(props.heapArray, true)\n        }\n        if(currentQuestion === 2){\n            props.mergeSort(props.mergeArray, true)   \n        }\n        if(currentQuestion === 3){\n            props.quickSort(props.quickArray, true)   \n        }\n        if(currentQuestion === 4){\n            props.bubbleSort(props.bubbleArray, props.bubbleArray.length, true)   \n        }\n    }\n\n    function submitQuestion (e) {\n        e.preventDefault()\n        console.log(userPercent)\n        if(currentQuestion === 1){\n            if(e.target[3].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bHeap: 'true'})\n            } else {\n                setUserScore({...userScore, bHeap: 'false'})\n            }\n        }\n        if(currentQuestion === 2){\n            if(e.target[0].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bMerge: 'true'})\n            } else {\n                setUserScore({...userScore, bMerge: 'false'}) \n            }\n        }\n        if(currentQuestion === 3){\n            if(e.target[2].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bQuick: 'true'})\n            } else {\n                setUserScore({...userScore, bQuick: 'false'}) \n            }\n        }\n        if(currentQuestion === 4){\n            if(e.target[1].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bBubble: 'true'})\n            } else {\n                setUserScore({...userScore, bBubble: 'false'}) \n            }\n        }\n        setCurrentQuestion(currentQuestion+1)\n    }\n\n    const postScore = (e) => {\n        e.preventDefault()\n        console.log(userScore.percent+'')\n        let preJSONBody = {\n          bHeap: userScore.bHeap,\n          bMerge: userScore.bMerge,\n          bQuick: userScore.bQuick,\n          bBubble: userScore.bBubble,\n          percent: userPercent,\n          userId: props.user._id\n        }\n        const requestOptions = {\n          method: 'POST',\n          body: JSON.stringify(preJSONBody),\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${props.user.token}`\n          },\n        }\n        console.log(requestOptions.body)\n        fetch(`${apiUrl}/scores`, requestOptions)\n          .then(postedScore=> {\n            navigate('/my-scores')\n          })\n          .catch(err => console.error(err))\n    }\n\n    const body = () =>{\n\n        if(currentQuestion < 5){\n            return (\n                <div style={container}>\n                    <h2 style={title}>Algo Test</h2>\n                    <h3 style={subtitle}>Question {currentQuestion}</h3>\n                    <p style={question}>Watch the animation and guess the sort?</p>\n                    <Graph array={currentQuestion == 1 ? props.heapArray : \n                                        (currentQuestion == 2 ? props.mergeArray : \n                                            (currentQuestion == 3 ? props.quickArray : \n                                                (currentQuestion == 4 ? props.bubbleArray : [])))} \n                                arrColors={props.arrColors}/>\n                    <div className='flexContainer'>\n                        <Form onSubmit={submitQuestion}>\n                            <Form.Group column='true' className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Merge Sort\" />\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Bubble Sort\" />\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Quick Sort\" />\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Heap Sort\" />\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Form>\n                        \n                    </div>\n                </div>  \n            )\n        } else{\n            return (\n                <div style={container}>\n                    <h2 style={title}>Algo Test Completed</h2>\n                    <h3 style={subtitle}>You got merge sort {userScore.bMerge? 'right' : 'wrong'}</h3>\n                    <h3 style={subtitle}>You got quick sort {userScore.bQuick? 'right' : 'wrong'}</h3>\n                    <h3 style={subtitle}>You got bubble sort {userScore.bBubble? 'right' : 'wrong'}</h3>\n                    <h3 style={subtitle}>You got heap sort {userScore.bHeap? 'right' : 'wrong'}</h3>\n                    {props.user ?<Button style={button} onClick={postScore}>Save Score</Button> : <p style={question}>Make sure you are signed in or you score will not be saved</p>}\n                    <h1 style={title}>{userScore.precent}% was your score</h1>\n                </div>\n            )\n        }\n        \n    }\n\n    return (\n        <>  \n        {body()}\n        </>\n    )\n}\n\nexport default AlgoTest","import React, { useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap'\nimport apiUrl from '../apiConfig'\n\nconst MyScores = (props) => {\n\n    const [reset, setReset] = useState(false)\n    // Fetch user's scores when page loads\n    const [myScores, setMyScores] = useState([])\n    useEffect(() => {\n\t\tconst requestOptions = {\n\t\t  headers: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Bearer ${props.user.token}`\n\t\t  },\n\t\t}\n        fetch(`${apiUrl}/scores/user/${props.user._id}`, requestOptions)\n        .then(res => res.json())\n        .then(foundObject=>{\n            // Sets API data to state myScores\n            console.log(foundObject)\n            setMyScores(foundObject.myScores)\n        })\n    }, [reset])\n\n    // Delete that score when they press Delete btn\n    const deleteScore = (e) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${props.user.token}`\n            },\n        }\n        fetch(`${apiUrl}/scores/${e.target.id}`, requestOptions)\n        .then(resBody => {\n            setReset(!reset)\n        })\n    }\n\n    // Style Objects\n    const container = {\n        margin: '100px'\n      }\n    const scoreStyle = {\n        display: 'flex'\n    }\n    const columnStyle = {\n        width: '200px'\n    }\n    const greenText = {\n        color: 'green'\n    }\n    const redText = {\n        color: 'red'\n    }\n    let arrDiv = <h3>No Scores Yet... Time to Test Your Knowledge!</h3>\n    if(myScores[0]){\n        arrDiv = myScores.map(score => {\n            return <div style={scoreStyle}>\n                <span style={columnStyle}>Bubble Sort: <span style={score.bBubble ? greenText:redText}>{score.bBubble ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Quick Sort: <span style={score.bQuick ? greenText:redText}>{score.bQuick ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Merge Sort: <span style={score.bMerge ? greenText:redText}>{score.bMerge ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Heap Sort: <span style={score.bHeap ? greenText:redText}>{score.bHeap ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Percentage: {score.percent}</span>\n                <Button variant=\"danger\" type=\"goBack\" onClick={deleteScore} id={score._id}>\n                    Delete\n                </Button>\n            </div>\n        })\n    }\n\n    return (\n        <div style={container}>\n            <h1>MyScores</h1>\n            {arrDiv}\n        </div>\n    )\n}\n\nexport default MyScores","// import React, { Component, Fragment } from 'react'\nimport React, { useState, Fragment } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\n// import AuthenticatedRoute from './components/shared/AuthenticatedRoute'\nimport Header from \"./components/shared/Header\";\nimport RequireAuth from \"./components/shared/RequireAuth\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/auth/SignUp\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignOut from \"./components/auth/SignOut\";\nimport ChangePassword from \"./components/auth/ChangePassword\";\n// import Data Pages\nimport AlgoTest from \"./components/AlgoTest\";\nimport MyScores from \"./components/MyScores\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  const clearUser = () => {\n    setUser(null);\n  };\n\n  //----- STATE VARIABLES -----\n  // State for busy doing one of the sorts\n  const [busy, setBusy] = useState(false);\n  // State for number array\n  const [arrayHome, setArrayHome] = useState(generate(200, 5, 1000));\n  const [arrayTestQuick, setArrayTestQuick] = useState(generate(100, 5, 1000));\n  const [arrayTestBubble, setArrayTestBubble] = useState(\n    generate(100, 5, 1000)\n  );\n  const [arrayTestMerge, setArrayTestMerge] = useState(generate(100, 5, 1000));\n  const [arrayTestHeap, setArrayTestHeap] = useState(generate(100, 5, 1000));\n  // State for animation delay\n  const [delay, setDelay] = useState(20);\n\n  function changeDelay(e) {\n    setDelay(e.target.value);\n  }\n\n  // funtion for regenerating random number array\n  function generate(length, min = 0, max = 1000) {\n    let array = [];\n    for (let i = 0; i < length; i++) {\n      array.push(Math.floor(Math.random() * (max - min) + min));\n    }\n    return array;\n  }\n  // funtion for regenerating random number array\n  function regenerate() {\n    // let array = []\n    // for(let i=0; i<length; i++){\n    //   array.push(Math.floor(Math.random()*(max-min) + min))\n    // }\n    window.location.reload(false);\n    // return array\n  }\n\n  // helper function for swapping items in an array\n  function swap(array, index1, index2) {\n    let temp = array[index1];\n    array[index1] = array[index2];\n    array[index2] = temp;\n  }\n\n  // async helper function for sleeping before swapping items in an array\n  async function sleepThenSwap(array, index1, index2) {\n    // Pause x milliseconds\n    await sleep(delay);\n    swap(array, index1, index2);\n  }\n\n  // async helper function for waiting so many milliseconds\n  async function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  // Bubble sort when press button\n  async function bubbleSort(array, n, bTest) {\n    if (!bTest) setBusy(true);\n    // Iterative Solution\n    // let swapped = false\n    // let tempArray = array\n    // for(let i=0; i<tempArray.length; i++){\n    //   swapped = false\n    //   for(let j=0; j<tempArray.length-i-1; j++){\n    //     if(tempArray[j] > tempArray[j+1]){\n    //       let temp = tempArray[j]\n    //       tempArray[j] = tempArray[j+1]\n    //       tempArray[j+1] = temp\n    //       swapped = true\n    //     }\n    //   }\n    //   if(!swapped){break}\n    // }\n\n    // Recursive Solution\n    // Base case\n    if (n === 1) return;\n    // After each pass, the largest element is pushed to the end\n    for (let i = 0; i < n - 1; i++)\n      if (array[i] > array[i + 1]) {\n        // swap arr[i] and arr[i+1]\n        await sleepThenSwap(array, i, i + 1);\n        if (bTest) {\n          setArrayTestBubble([...array]);\n        } else {\n          setArrayHome([...array]);\n        }\n      }\n\n    // Largest element is moved to end, recur for remaining array\n    bubbleSort(array, n - 1, bTest);\n  }\n\n  async function quickSort(array, bTest) {\n    if (!bTest) setBusy(true);\n    // function for sorting each half of array\n    async function partition(subArray, leftIndex, rightIndex) {\n      let pivot = subArray[Math.floor((leftIndex + rightIndex) / 2)]; //middle element\n      let i = leftIndex;\n      let j = rightIndex;\n      while (i <= j) {\n        while (subArray[i] < pivot) {\n          i++; //move i to the right until that element is greater than pivot (first element greater than pivot)\n        }\n        while (subArray[j] > pivot) {\n          j--; //move j to the left until that element is less than pivot (first element less than pivot from left)\n        }\n        if (i <= j) {\n          await sleepThenSwap(subArray, i, j); //swap the two elements\n          if (bTest) {\n            await setArrayTestQuick([...subArray]);\n          } else {\n            await setArrayHome([...subArray]);\n          }\n          i++;\n          j--;\n        }\n      }\n      return i; //return pivot position\n    }\n    // recursive function to sort each half of array over and over\n    // this is typically labeled 'quickSort'\n    async function divideAndConquer(subArray, left, right) {\n      if (subArray.length > 1) {\n        let index = await partition(subArray, left, right);\n        if (left < index - 1) {\n          divideAndConquer(subArray, left, index - 1);\n        }\n        if (index < right) {\n          divideAndConquer(subArray, index, right);\n        }\n      }\n      return subArray;\n    }\n    //Go\n    divideAndConquer(array, 0, array.length - 1);\n  }\n\n  async function mergeSort(array, bTest) {\n    if (!bTest) setBusy(true);\n    // Constant space version of merge (as opposed to linear space so this was is better)\n    async function merge(arr, beg, mid, end, maxele) {\n      let i = beg;\n      let j = mid + 1;\n      let k = beg;\n      while (i <= mid && j <= end) {\n        if (arr[i] % maxele <= arr[j] % maxele) {\n          arr[k] = arr[k] + (arr[i] % maxele) * maxele;\n          k++;\n          i++;\n        } else {\n          arr[k] = arr[k] + (arr[j] % maxele) * maxele;\n          k++;\n          j++;\n        }\n      }\n      while (i <= mid) {\n        arr[k] = arr[k] + (arr[i] % maxele) * maxele;\n        k++;\n        i++;\n      }\n      while (j <= end) {\n        arr[k] = arr[k] + (arr[j] % maxele) * maxele;\n        k++;\n        j++;\n      }\n\n      // Obtaining actual values\n      for (i = beg; i <= end; i++) {\n        arr[i] = Math.floor(arr[i] / maxele);\n      }\n      await sleep(delay);\n      if (bTest) {\n        await setArrayTestMerge([...arr]);\n      } else {\n        await setArrayHome([...arr]);\n      }\n    }\n\n    // Recursive merge sort with extra parameter, maxele\n    async function mergeSortRec(arr, beg, end, maxele) {\n      if (beg < end) {\n        let mid = Math.floor((beg + end) / 2);\n        await mergeSortRec(arr, beg, mid, maxele);\n        await mergeSortRec(arr, mid + 1, end, maxele);\n        await merge(arr, beg, mid, end, maxele);\n      }\n    }\n\n    // This functions finds max element and calls recursive merge sort.\n    async function mergeSort(arr, n) {\n      let maxele = Math.max(...arr) + 1;\n      await mergeSortRec(arr, 0, n - 1, maxele);\n    }\n    //Go\n    await mergeSort(array, array.length);\n  }\n\n  async function heapSort(array, bTest) {\n    if (!bTest) setBusy(true);\n    // sets n to length of array\n    let tempArray = array;\n    let n = array.length;\n    // This loop sets the entire array into a heap\n    for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\n      await heapify(tempArray, n, i);\n      if (bTest) {\n        await setArrayTestHeap([...tempArray]);\n      } else {\n        await setArrayHome([...tempArray]);\n      }\n    }\n\n    // This for loop swaps the first and last elements of the array\n    for (let i = n - 1; i > 0; i--) {\n      swap(tempArray, i, 0);\n      await heapify(tempArray, i, 0);\n      if (bTest) {\n        await setArrayTestHeap([...tempArray]);\n      } else {\n        await setArrayHome([...tempArray]);\n      }\n    }\n  }\n  // function is used to turn an array into a heap\n  async function heapify(arr, n, i) {\n    // sets the largest to i the parent of the heap\n    let largest = i;\n    // sets the childern for heap\n    let l = 2 * i + 1;\n    let r = 2 * i + 2;\n\n    // test two childern to see if larger than head\n    if (l < n && arr[l] > arr[largest]) largest = l;\n\n    if (r < n && arr[r] > arr[largest]) largest = r;\n\n    // if largest is not i then switch its location\n    if (largest !== i) {\n      await sleepThenSwap(arr, i, largest);\n      // run heapify untill this if statement is not true\n      await heapify(arr, n, largest);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Header user={user} />\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              user={user}\n              array={arrayHome}\n              setArray={setArrayHome}\n              regenerate={regenerate}\n              bubbleSort={bubbleSort}\n              quickSort={quickSort}\n              mergeSort={mergeSort}\n              heapSort={heapSort}\n              delay={delay}\n              changeDelay={changeDelay}\n              busy={busy}\n            />\n          }\n        />\n        <Route\n          path=\"/algo-test\"\n          element={\n            <AlgoTest\n              user={user}\n              bubbleArray={arrayTestBubble}\n              quickArray={arrayTestQuick}\n              heapArray={arrayTestHeap}\n              mergeArray={arrayTestMerge}\n              setArrayBubble={setArrayTestBubble}\n              setArrayQuick={setArrayTestQuick}\n              setArrayHeap={setArrayTestHeap}\n              setArrayMerge={setArrayTestMerge}\n              bubbleSort={bubbleSort}\n              quickSort={quickSort}\n              mergeSort={mergeSort}\n              heapSort={heapSort}\n            />\n          }\n        />\n        <Route path=\"/sign-up\" element={<SignUp setUser={setUser} />} />\n        <Route path=\"/sign-in\" element={<SignIn setUser={setUser} />} />\n        <Route\n          path=\"/sign-out\"\n          element={\n            <RequireAuth user={user}>\n              <SignOut clearUser={clearUser} user={user} />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path=\"/change-password\"\n          element={\n            <RequireAuth user={user}>\n              <ChangePassword user={user} />\n            </RequireAuth>\n          }\n        />\n        <Route path=\"/my-scores\" element={<MyScores user={user} />} />\n      </Routes>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}